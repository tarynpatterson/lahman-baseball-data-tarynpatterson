-- 1. What range of years for baseball games played does the provided database cover?
--  1871 - 2016
SELECT MIN(span_first),
		MAX(span_last)
FROM homegames;

-- 2. Find the name and height of the shortest player in the database. How many games did he play in? What is the name 
-- 	of the team for which he played?
-- Eddie Gaedel, 43 in, 1 game, St. Louis Browns
SELECT a.playerid,
		p.namefirst,
		p.namelast,
		p.height,
		t.name,
		SUM(a.g_all) AS total_games
FROM appearances AS a
LEFT JOIN people AS p
ON a.playerid = p.playerid
LEFT JOIN (SELECT DISTINCT teamid, name
		   FROM teams) AS t
ON a.teamid = t.teamid
WHERE height IN (SELECT MIN(p.height)
				FROM people AS p)
GROUP BY a.playerid, p.namefirst, p.namelast, p.height, t.name;

-- 3. Find all players in the database who played at Vanderbilt University. Create a list showing each player’s first 
-- and last names as well as the total salary they earned in the major leagues. Sort this list in descending order 
-- by the total salary earned. Which Vanderbilt player earned the most money in the majors?
-- David Price, $81,851,296
SELECT p.playerid,
		p.namefirst,
		p.namelast,
		SUM(DISTINCT s.salary) AS total_salary
FROM people AS p
LEFT JOIN salaries AS s
ON p.playerid = s.playerid
WHERE p.playerid IN (SELECT playerid
					FROM collegeplaying
					WHERE schoolid = 'vandy')
AND salary IS NOT NULL
GROUP BY p.playerid, p.namefirst, p.namelast
ORDER BY total_salary DESC;

-- 4. Using the fielding table, group players into three groups based on their position: label players with position 
-- OF as "Outfield", those with position "SS", "1B", "2B", and "3B" as "Infield", and those with position "P" or "C"
-- as "Battery". Determine the number of putouts made by each of these three groups in 2016.
-- Outfield = 29560, Infield = 58934, Battery = 41424
SELECT CASE WHEN pos = 'OF' THEN 'Outfield'
		WHEN pos = 'SS' OR pos = '1B' OR pos = '2B' OR pos = '3B' THEN ' Infield'
		WHEN pos = 'P' OR pos = 'C' THEN ' Battery'
		END AS position,
		SUM(po) AS putouts
FROM fielding
WHERE yearid = '2016'
GROUP BY position;

-- 5. Find the average number of strikeouts per game by decade since 1920. Round the numbers you report to 2 decimal places. 
-- Do the same for home runs per game. Do you see any trends?
-- The averages seem to gradually increase over decade
SELECT (yearid)/10*10 AS decade,
		ROUND(AVG(so),2) AS strikeouts,
		ROUND(AVG(hr),2) AS homeruns
FROM batting
WHERE yearid >= 1920
GROUP BY decade
ORDER BY decade;

-- 6. Find the player who had the most success stealing bases in 2016, where success is measured as the percentage of stolen 
-- base attempts which are successful. (A stolen base attempt results either in a stolen base or being caught stealing.) 
-- Consider only players who attempted at least 20 stolen bases.
-- Chris Owings, 91%
SELECT p.namefirst,
		p.namelast,
		SUM(sb) AS stolen_bases,
		SUM(cs) AS caught_stealing,
		ROUND(CAST(SUM(sb) AS decimal)/ CAST((SUM(sb) + SUM(cs)) AS decimal),2) AS success_rate
FROM batting AS b
LEFT JOIN people AS p
ON b.playerid = p.playerid
WHERE yearid = 2016
GROUP BY p.namefirst, p.namelast
HAVING SUM(sb) + SUM(cs) >= 20
ORDER BY success_rate DESC;

-- 7. From 1970 – 2016, what is the largest number of wins for a team that did not win the world series? What is the smallest 
-- number of wins for a team that did win the world series? Doing this will probably result in an unusually small number of 
-- wins for a world series champion – determine why this is the case. Then redo your query, excluding the problem year. How 
-- often from 1970 – 2016 was it the case that a team with the most wins also won the world series? What percentage of the time?
-- Largest Wins/No WS = Seattle, 116, 2001
-- Smallest Wins/WS = Lancaster, 63, 1981
-- Why? 1981 was a players strike and there were not many players playing
SELECT yearid AS year, 
		teamid as team, 
		wswin, 
		w AS wins
FROM teams
WHERE yearid between 1970 and 2016
AND wswin IS NOT NULL
ORDER BY wswin, wins DESC;

SELECT yearid, teamid, wswin, w, MAX(w) OVER(PARTITION BY yearid),
CASE WHEN wswin = 'Y' AND w = MAX(w) OVER(PARTITION BY yearid) THEN 'Yes'
ELSE 'No' END AS case
FROM teams
WHERE yearid between 1970 and 2016
AND wswin IS NOT NULL
AND yearid != 1981
ORDER BY yearid, wswin DESC, w DESC


-- 8. Using the attendance figures from the homegames table, find the teams and parks which had the top 5 average 
-- attendance per game in 2016 (where average attendance is defined as total attendance divided by number of games). 
-- Only consider parks where there were at least 10 games played. Report the park name, team name, and average 
-- attendance. Repeat for the lowest 5 average attendance.
SELECT name,
		park_name,
		SUM(h.attendance) / SUM(h.games) AS avg_attendance
FROM homegames AS h
LEFT JOIN parks AS p
ON h.park = p.park
LEFT JOIN teams AS t
ON h.team = t.teamidlahman45
WHERE year = '2016'
GROUP BY name, park_name
HAVING SUM(h.games) >= 10
ORDER BY avg_attendance DESC;

SELECT team,
		park_name,
		SUM(h.attendance) / SUM(h.games) AS avg_attendance
FROM homegames AS h
LEFT JOIN parks AS p
ON h.park = p.park
WHERE year = '2016'
GROUP BY team, park_name
HAVING SUM(h.games) >= 10
ORDER BY avg_attendance DESC
LIMIT 5;

-- 9. Which managers have won the TSN Manager of the Year award in both the National League (NL) and the American 
-- League (AL)? Give their full name and the teams that they were managing when they won the award.
-- Davey Johnson & Jim Leyland
WITH am AS (SELECT playerid, awardid, lgid
			FROM awardsmanagers
		   WHERE lgid = 'NL'
		   AND awardid ILIKE 'TSN%'),
am2 AS (SELECT playerid, awardid, lgid
			FROM awardsmanagers
		   WHERE lgid = 'AL'
		   AND awardid ILIKE 'TSN%'),
p AS (SELECT playerid, namefirst, namelast
	 FROM people
	 WHERE playerid IN (SELECT playerid
					   FROM am)
	 AND playerid IN (SELECT playerid
					 FROM am2))
SELECT am3.playerid, p.namefirst, p.namelast, awardid, am3.yearid, am3.lgid, t.teamid
FROM awardsmanagers AS am3
LEFT JOIN p
ON am3.playerid = p.playerid
LEFT JOIN managershalf AS mh
ON p.playerid = mh.playerid
LEFT JOIN teams AS t
ON mh.teamid = t.teamid
WHERE p.playerid IN (SELECT p.playerid
					FROM am)
AND p.playerid IN (SELECT p.playerid
				FROM am2)
AND awardid ILIKE 'TSN%'
ORDER BY am3.playerid;
